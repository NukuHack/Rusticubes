[package]
name = "rusticubes"
version = "0.4.5"
edition = "2024"
authors = ["NukuHack", "nukuhack@gmail.com"] # might not be able to answer too quickly
description = "3D voxel sandbox game"
readme = true
repository = "https://github.com/NukuHack/Rusticubes"
license = "MIT"
keywords = ["gamedev", "graphics"]
include = ["/src", "LICENSE"]
build = "build.rs"


[dependencies]
# core lib for events and other utility stuff
winit = { version = "0.29", features = ["rwh_05"] }
# core lib used to make windows and display stuff on them
wgpu = "24" # not sure how to add vulkan to this ...
# advanced lib for math and extra complex stuff
bytemuck = { version = "1.16", features = [ "derive" ] }
# just the basic math : 3d points vectors rotation etc...
glam = "0.30"
# image load lib
image = { version = "0.24", features = ["png", "jpeg"], default-features = false}
# just to compile the resources
include_dir = "0.7"
# better hashmap access
ahash = "0.8"
# needed to de-compress the files
lz4_flex = "0.11"
# to get the home folder
dirs = "6.0.0"
# added this to read the ttf
rusttype = "0.9"
# needed for neat sound playing
rodio = "0.20"
# small lib used for memory clearing
winapi = "0"
windows-sys = { version = "0.48", features = ["Win32_System_Memory"] }
# networking and routing crates
ggrs = "0.10.0"
matchbox_socket = "0.7"
# used for json serialization and de-serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# used to run external code at runtime -> modding
wasmtime = "14.0.4"


[build-dependencies]
walkdir = "2"
lz4_flex = "0.11"
filetime = "0.2"


[package.metadata.windows]
icon = "assets/icon.ico"

[profile.dev]
opt-level = 1       # Light optimizations
incremental = true  # Faster recompiles
codegen-units = 16   # Parallel compilation

[profile.dev.package."*"]
opt-level = 1       # Apply to dependencies too


[profile.release]
opt-level = 3       # Optimize for speed (not size)
incremental = false # Disabled (good for release)
codegen-units = 4   # Balance compile time/optimization
lto = true          # Link-time optimization (good)
panic = "abort"     # Reduces binary size (good)
strip = true        # Removes debug symbols (good)

[profile.release.package."*"]
opt-level = 3       # Apply to dependencies too


